id g = g  (could also be written id = \g -> g)
applier f g x = f (g x)

instance Functor ((->) r) where
  fmap f g = \x -> applier f g x

     fmap id
   { eta-expand }
   = \g -> fmap id g
   { substitute definition of fmap for (->) r }
   = \g -> \x -> applier id g x
   { substitute definition of applier }
   = \g -> \x -> id (g x)
   { substitute definition of id }
   = \g -> \x -> g x
   { eta-reduction }
   = \g -> g
   { this is the definition of id }
   = id