From: "John Wiegley" <johnw@fpcomplete.com>
To: libraries@haskell.org
Subject: Proposal: Add Data.Semigroup to base, as a superclass of Monoid
Gcc: list.haskell.libraries
Organization: FP Complete Corp.
Date: Tue, 11 Jun 2013 13:23:29 -0500
--text follows this line--
1. I propose that we add the following package to base:

     http://hackage.haskell.org/packages/archive/semigroups/0.9.2/doc/html/Data-Semigroup.html

   This is somewhat in the spirit of the AMP proposal: further improving the
   correctness of our algebraic abstractions.

2. That we make Semigroup a superclass of Monoid, so that (minimally):

     class Semigroup a where
         (<>) :: a -> a -> a

     class Semigroup a => Monoid a where
         mempty :: a
         mconcat :: [a] -> a

     mappend :: Semigroup a => a -> a -> a
     mappend = (<>)

3. (Optional, recommended) There are other useful functions that can be added
   to Semigroup, such as sconcat and times1p, but I will let Edward speak to
   whether those should be proposed at this time.

4. (Optional, recommended) That we fix the Monoid instance for Maybe to be:

    instance Semigroup a => Monoid (Maybe a)

-- 
John Wiegley
FP Complete                         Haskell tools, training and consulting
http://fpcomplete.com               johnw on #haskell/irc.freenode.net