#!/bin/bash -xe

export LOGDIR=/tank/Data/Products/logs

perl sync-all -r http://darcs.haskell.org/ --no-dph --nofib --testsuite get

git checkout origin/master
rm -fr libraries/base/tests/IO/chin*

#curl http://hackage.haskell.org/trac/ghc/raw-attachment/ticket/7040/ghc7040.patch | patch -p1

cat > mk/build.mk <<EOF
V=1
SRC_HC_OPTS        = -H64m -O -fasm
GhcLibHcOpts       = -O -dcore-lint
GhcStage1HcOpts    = -Rghc-timing -O -fasm
GhcStage2HcOpts    = -Rghc-timing -O0 -DDEBUG
SplitObjs          = NO
LAX_DEPENDENCIES   = YES

HADDOCK_DOCS=YES
LATEX_DOCS=YES
HSCOLOUR_SRCS=YES
BUILD_DOCBOOK_HTML=YES
BUILD_DOCBOOK_PDF=YES
BUILD_DOCBOOK_PS=YES

# After stage 1 and the libraries have been built, you can uncomment this line:

# stage=2

# Then stage 1 will not be touched by the build system, until
# you comment the line again.  This is a useful trick for when you're
# working on stage 2 and want to freeze stage 1 and the libraries for
# a while.
EOF

# If on Linux...
#echo "BeConservative=YES" >> mk/build.mk

export PATH=/usr/local/bin:/Users/johnw/.cabal/bin:$PATH
export XML_CATALOG_FILES=/usr/local/etc/xml/catalog

perl boot

./configure --prefix=/usr/local/Cellar/ghc/HEAD
make
make binary-dist

(cd testsuite/tests ; make THREADS=64) \
    > $LOGDIR/ghc-fulltest-$(date +'%y%m%d').log 2>&1

(cd nofib ; make boot ; make) \
    > $LOGDIR/ghc-nofib-$(date +'%y%m%d').log 2>&1